{"version":3,"file":"service-worker.js","mappings":"yBAEMA,EAAMC,SAASC,SAASC,YAAY,KACpCD,EAAWF,GAAO,EAAIC,SAASC,SAASE,OAAO,EAAGJ,GAAOE,EACzDG,EAAOJ,SAASK,OAASJ,EAEzBK,EAAqB,eAErBC,EAAgB,CACpB,IACA,cACA,cACA,aACA,qBACA,iBACA,aAGFC,KAAKC,iBAAiB,WAAWC,UAC/B,MAAMC,EAAK,2BACXC,QAAQC,IAAIF,EAAI,sBAAuBL,GACvC,MAAMQ,QAAqBC,OAAOC,KAAKV,GAEvC,GADAM,QAAQC,IAAIF,EAAI,gBAAiBG,GAC7BA,EACF,IAAK,MAAMG,KAAOV,EAAe,CAC/B,MAAMW,EAAUd,EAAOa,EACvBL,QAAQC,IAAIF,EAAI,oBAAqBO,SAC/BJ,EAAaK,IAAID,GAG3BV,KAAKY,iBAGPZ,KAAKC,iBAAiB,YAAYC,UAChC,MAAMC,EAAK,4BACXC,QAAQC,IAAIF,GACZ,MAAMU,QAAaN,OAAOM,OAC1BT,QAAQC,IAAIF,EAAI,cAAeW,KAAKC,UAAUF,IAC9C,IAAK,MAAMG,KAAOH,EACZG,IAAQlB,IACVM,QAAQC,IAAIF,EAAI,sBAAuBa,SACjCT,OAAOU,OAAOD,OAK1BhB,KAAKC,iBAAiB,SAASC,MAAAA,IAE7BgB,EAAMC,YACJZ,OAAOa,MAAMF,EAAMG,SAChBC,MAAKC,IACJnB,QAAQC,IAJH,yBAIW,qBAAsBa,EAAMG,QAAQZ,IAAK,YAAac,GAC/DA,GAAsBC,MAAMN,EAAMG,iB","sources":["webpack://rubiks-cube/./src/service-worker.js"],"sourcesContent":["import packageJson from '../package.json'\n\nconst pos = location.pathname.lastIndexOf('/')\nconst pathname = pos >= 0 ? location.pathname.substr(0, pos) : pathname\nconst base = location.origin + pathname\n\nconst CURRENT_CACHE_NAME = `cache-${packageJson.version}`\n\nconst URLS_TO_CACHE = [\n  '/',\n  '/index.html',\n  '/styles.css',\n  '/bundle.js',\n  '/cube-bevelled.glb',\n  '/manifest.json',\n  '/icon.png'\n]\n\nself.addEventListener('install', async () => {\n  const FN = '[service worker install]'\n  console.log(FN, 'CURRENT_CACHE_NAME:', CURRENT_CACHE_NAME)\n  const currentCache = await caches.open(CURRENT_CACHE_NAME)\n  console.log(FN, 'currentCache:', currentCache)\n  if (currentCache) {\n    for (const url of URLS_TO_CACHE) {\n      const fullUrl = base + url\n      console.log(FN, 'currentCache.add:', fullUrl)\n      await currentCache.add(fullUrl)\n    }\n  }\n  self.skipWaiting()\n})\n\nself.addEventListener('activate', async () => {\n  const FN = '[service worker activate]'\n  console.log(FN)\n  const keys = await caches.keys()\n  console.log(FN, 'old caches:', JSON.stringify(keys))\n  for (const key of keys) {\n    if (key !== CURRENT_CACHE_NAME) {\n      console.log(FN, 'deleting old cache:', key)\n      await caches.delete(key)\n    }\n  }\n})\n\nself.addEventListener('fetch', async event => {\n  const FN = '[service worker fetch]'\n  event.respondWith(\n    caches.match(event.request)\n      .then(response => {\n        console.log(FN, 'event.request.url:', event.request.url, 'response:', response)\n        return response ? response : fetch(event.request)\n      })\n  )\n})\n"],"names":["pos","location","pathname","lastIndexOf","substr","base","origin","CURRENT_CACHE_NAME","URLS_TO_CACHE","self","addEventListener","async","FN","console","log","currentCache","caches","open","url","fullUrl","add","skipWaiting","keys","JSON","stringify","key","delete","event","respondWith","match","request","then","response","fetch"],"sourceRoot":""}