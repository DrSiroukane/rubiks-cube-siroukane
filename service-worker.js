(()=>{"use strict";const e=location.pathname.lastIndexOf("/"),s=e>=0?location.pathname.substr(0,e):s,t=location.origin+s,c="cache-0.0.52",o=["/","/index.html","/styles.css","/bundle.js","/cube-bevelled.glb","/manifest.json","/icon.png"];self.addEventListener("install",(async()=>{const e="[service worker install]";console.log(e,"CURRENT_CACHE_NAME:",c);const s=await caches.open(c);if(console.log(e,"currentCache:",s),s)for(const c of o){const o=t+c;console.log(e,"currentCache.add:",o),await s.add(o)}self.skipWaiting()})),self.addEventListener("activate",(async()=>{const e="[service worker activate]";console.log(e);const s=await caches.keys();console.log(e,"old caches:",JSON.stringify(s));for(const t of s)t!==c&&(console.log(e,"deleting old cache:",t),await caches.delete(t))})),self.addEventListener("fetch",(async e=>{e.respondWith(caches.match(e.request).then((s=>(console.log("[service worker fetch]","event.request.url:",e.request.url,"response:",s),s||fetch(e.request)))))}))})();
//# sourceMappingURL=service-worker.js.map